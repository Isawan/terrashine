version: "3.9"
services:

  postgres:
    image: docker.io/library/postgres:16-alpine@sha256:49fd8c13fbd0eb92572df9884ca41882a036beac0f12e520274be85e7e7806e9
    network_mode: host
    # ports:
    #   - "5432:5432"
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      POSTGRES_PASSWORD: password

  minio:
    image: quay.io/minio/minio:latest@sha256:ea2c70cda70860c7d10f04ce1df640d3abb995784cb7aeedef8d4baa53a5a113
    command: [ "server", "/data", "--console-address", ":9001" ]
    network_mode: host
    # ports:
    #   - "9001:9001"
    #   - "9000:9000"
    deploy:
      restart_policy:
        condition: on-failure

  aws-cli:
    depends_on:
      - minio
    image: docker.io/amazon/aws-cli@sha256:e55139d687402a5e601f3481035f3e5b8cf8884a69dc4859d48bfb3ff05c5520
    entrypoint: aws
    network_mode: host
    command:
      [
        "--endpoint-url",
        "http://localhost:9000",
        "s3api",
        "create-bucket",
        "--bucket",
        "terrashine"
      ]
    environment:
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_DEFAULT_REGION: us-east-1

  generate-certificates:
    image: docker.io/alpine/openssl@sha256:935ab19102aae3aafbb54b0583760d357dbad8b8cc1d3b506c32219632c41e9a
    entrypoint: /mnt/scripts/generate-test-certificate
    working_dir: /mnt/
    volumes:
      - source: ./resources/
        target: /mnt/resources/
        type: bind
      - source: ./scripts/
        target: /mnt/scripts/
        type: bind

  nginx:
    image: docker.io/library/nginx@sha256:6db391d1c0cfb30588ba0bf72ea999404f2764febf0f1f196acd5867ac7efa7e
    network_mode: host
    volumes:
      - ./resources/test/nginx:/etc/nginx:ro
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - generate-certificates
  #terrashine:
  #  image: docker.io/library/rust
  #  build:
  #    context: .
  #    dockerfile: Dockerfile
