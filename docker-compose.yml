version: "3.9"
services:

  postgres:
    image: docker.io/library/postgres:16-alpine@sha256:1d74239810c19ed0dbb317acae40974e673865b2d565a0d369e206159d483957
    network_mode: host
    # ports:
    #   - "5432:5432"
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      POSTGRES_PASSWORD: password

  minio:
    image: quay.io/minio/minio:latest@sha256:178e05aba3a0dc967df3558aab43097f1427bbcda77264fc24e92f1bf09dfe02
    command: [ "server", "/data", "--console-address", ":9001" ]
    network_mode: host
    # ports:
    #   - "9001:9001"
    #   - "9000:9000"
    deploy:
      restart_policy:
        condition: on-failure

  aws-cli:
    depends_on:
      - minio
    image: docker.io/amazon/aws-cli@sha256:0fadd0fc0cd5c415d103cc8187ae8744a66b085da33cc56d2d2ceccc306e2a97
    entrypoint: aws
    network_mode: host
    command:
      [
        "--endpoint-url",
        "http://localhost:9000",
        "s3api",
        "create-bucket",
        "--bucket",
        "terrashine"
      ]
    environment:
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_DEFAULT_REGION: us-east-1

  generate-certificates:
    image: docker.io/alpine/openssl@sha256:321c614e1023de2094705aaf5812f9bf5b5371206db70a4276bed95758910e02
    entrypoint: /mnt/scripts/generate-test-certificate
    working_dir: /mnt/
    volumes:
      - source: ./resources/
        target: /mnt/resources/
        type: bind
      - source: ./scripts/
        target: /mnt/scripts/
        type: bind

  nginx:
    image: docker.io/library/nginx@sha256:9ff236ed47fe39cf1f0acf349d0e5137f8b8a6fd0b46e5117a401010e56222e1
    network_mode: host
    volumes:
      - ./resources/test/nginx:/etc/nginx:ro
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - generate-certificates
  #terrashine:
  #  image: docker.io/library/rust
  #  build:
  #    context: .
  #    dockerfile: Dockerfile
